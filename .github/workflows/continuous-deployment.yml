name: Publish
on:
  push:
    branches:
      - master
    paths:
      - ".github/**"
      - ".releaserc.yml"
      - "plugin/**"

jobs:
    # Log some info about the CI context
    debug:
      runs-on: ubuntu-latest
      steps:
        - name: Log Info
          run: |
            echo 'Event: ${{github.event_name}}'
            echo 'Branch: ${{github.ref_name}}'
            echo 'Content: ${{toJSON(github.event)}}'

    # Publish the project
    publish:
      runs-on: ubuntu-latest
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
        GIT_COMMITTER_NAME: Jahrim Gabriele Cesario
        GIT_COMMITTER_EMAIL: jahrim.cesario2@studio.unibo.it
        GIT_AUTHOR_NAME: Jahrim Gabriele Cesario
        GIT_AUTHOR_EMAIL: jahrim.cesario2@studio.unibo.it
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_mavenUsername: ${{ secrets.MAVEN_USERNAME }}
        ORG_GRADLE_PROJECT_mavenPassword: ${{ secrets.MAVEN_PASSWORD }}
      steps:
        # Install the specified version of Java in the provided runner
        - name: Install Java
          uses: actions/setup-java@v3
          with:
            distribution: 'adopt'
            java-version: 11
        # Install Node in the provided runner
        - name: Install Node
          uses: actions/setup-node@v3
        # Clone the repository, with full history and submodules
        - name: Clone Repository
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.GH_TOKEN }}
            fetch-depth: 0
            submodules: recursive
        # Authenticate as repository admin
        - name: Import GPG Key for git authentication
          uses: crazy-max/ghaction-import-gpg@v5.3.0
          with:
            gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
            passphrase: ${{ secrets.GPG_SIGNING_PASSWORD }}
            git_user_signingkey: true
            git_commit_gpgsign: true
        # Validate the gradle wrapper to void supply chain attacks from pull-request that changes the wrapper
        - name: Validate Gradle Wrapper
          uses: gradle/wrapper-validation-action@v1
        # Build the project artifacts
        - name: Build Project
          working-directory: plugin
          run: |
            chmod 777 ./gradlew
            ./gradlew build
        # Create and publish artifacts on Maven
        - name: Publish on Maven
          working-directory: plugin
          run: ./gradlew publish --no-parallel
        # Publish artifacts on Gradle Portal
        - name: Publish on Gradle Portal
          working-directory: plugin
          run: ./gradlew publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PORTAL_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PORTAL_SECRET }}
        # Publish artifacts on GitHub
        - name: Publish on GitHub
          working-directory: plugin
          run: |
            npm clean-install
            npx semantic-release
